apiVersion: v1
kind: ConfigMap
metadata:
  name: eureka-configmap
data:
  # if you want to deploy n instances of eureka cluster,
  # you should set eureka_service_address: http://eureka-0.eureka:8761/eureka,...,http://eureka-(n-1).eureka:8761/eureka
  eureka_service_address: http://eureka-0.eureka:8761/eureka,http://eureka-1.eureka:8761/eureka,http://eureka-2.eureka:8761/eureka
---
apiVersion: v1
kind: Service
metadata:
  name: eureka-service
  labels:
    app: eureka
  annotations:
    prometheus.io/path: /actuator/prometheus
    prometheus.io/port: "8761"
    prometheus.io/scrape: "true"
spec:
  ports:
    - port: 8761
      name: eureka
  selector:
    app: eureka
---
apiVersion: v1
kind: Service
metadata:
  name: eureka
  labels:
    app: eureka
spec:
  clusterIP: None
  ports:
    - port: 8761
      name: eureka
  selector:
    app: eureka
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: eureka
  annotations:
    kubernetes.io/change-cause: <CHANGE_CAUSE>
spec:
  serviceName: 'eureka'
  # n instances
  replicas: 3
  selector:
    matchLabels:
      app: eureka
  template:
    metadata:
      labels:
        app: eureka
    spec:
      imagePullSecrets:
        - name: regcred
      volumes:
        - name: skywalking-agent
          emptyDir: {}
      initContainers:
        - image: registry.meitianiot.lo/public/skywalking-agent:8.1.0
          name: skywalking-agent
          imagePullPolicy: IfNotPresent
          command: ['sh']
          args: ['-c','cp -r /usr/skywalking/agent/* /skywalking/agent']
          volumeMounts:
            - mountPath: /skywalking/agent
              name: skywalking-agent
      containers:
        - name: eureka
          image: <IMAGE>:<IMAGE_TAG>
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /usr/skywalking/agent
              name: skywalking-agent
          ports:
            - containerPort: 8761
          resources:
            requests:
              memory: "512Mi"
              cpu: "200m"
            limits:
              memory: "1024Mi"
              cpu: "600m"
          env:
            - name: EUREKA_SERVER_ADDRESS
              valueFrom:
                configMapKeyRef:
                  name: eureka-configmap
                  key: eureka_service_address
            - name: ENVIRONMENT
              value: "pro"
            - name: SW_AGENT_NAME
              value: "springcloud-eureka"
            - name: JVM_OPTS
              value: "-Xms512m -Xmx512m -javaagent:/usr/skywalking/agent/skywalking-agent.jar"
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8761
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8761
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
          lifecycle:
            preStop:
              exec:
                command:
                  - "curl"
                  - "-XPOST"
                  - "http://127.0.0.1:8761/actuator/shutdown"
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: eureka-ingress
  annotations: {}
  # nginx.ingress.kubernetes.io/rewrite-target: /
  # nginx.ingress.kubernetes.io/load-balance: "ip_hash"
  # nginx.ingress.kubernetes.io/upstream-hash-by: "$request_uri"
spec:
  rules:
    - host: <INGRESS>.meitianiot.lo
      http:
        paths:
          - path: /
            backend:
              serviceName: eureka-service
              servicePort: 8761